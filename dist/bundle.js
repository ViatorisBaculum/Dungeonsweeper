(()=>{"use strict";const e={Bat:.4,Zombie:.3,Skeleton:.1,Ghost:.1,Boss:.1},t=[100,200,300,400],s=40,i=20,l=.15;class r{constructor(){this._experience=0,this._health=0,this._level=1,this._HTMLHooks=this.loadHTMLHooks()}set experience(e){this._experience=e,this.gainLevel(),this.updateStatsheet()}get experience(){return this._experience}set health(e){this._health=e,this._health<=0&&u.getInstance().endGame(),this.updateStatsheet()}get health(){return this._health}set level(e){this._level=e,this.updateStatsheet()}get level(){return this._level}getAttacked(e){this.health-=e}gainExperience(e){this.experience+=e}updateStatsheet(){this._HTMLHooks.playerClassDiv.innerText="Class: "+this.className,this._HTMLHooks.playerLevelDiv.innerText="Level: "+this._level.toString(),this._HTMLHooks.playerHealthDiv.innerText="Health: "+this._health.toString(),this._HTMLHooks.playerExperienceDiv.innerText="Experience: "+this._experience.toString()}loadHTMLHooks(){return{playerClassDiv:this.importHTMLElement("playerClass"),playerExperienceDiv:this.importHTMLElement("experience"),playerHealthDiv:this.importHTMLElement("health"),playerLevelDiv:this.importHTMLElement("playerLevel")}}importHTMLElement(e){const t=document.getElementById(e);if(!t)throw new Error("No html element with id: "+e);return t}gainLevel(){this.experience>t[this.level-1]&&(this.level+=1)}}class n extends r{constructor(){super(),this.className="Assassin",this.health=2}}class a extends r{constructor(){super(),this.className="Mage",this.health=3}}class h extends r{constructor(){super(),this.className="Paladin",this.health=4}}class o extends r{constructor(){super(),this.className="Warrior",this.health=5}}var c;!function(e){e[e.Empty=0]="Empty",e[e.Bat=1]="Bat",e[e.Zombie=2]="Zombie",e[e.Skeleton=3]="Skeleton",e[e.Ghost=4]="Ghost",e[e.Boss=5]="Boss"}(c||(c={}));class p{constructor(e,t,s,i,l,r){this.isClicked=!1,this.isFlagged=!1,this.type=e,this.board=t,this.value=r,this.x=s,this.y=i,this.HTMLElement=l,this.addEventListeners()}click(){void 0!==this.value&&this.revealCell(),0===this.value&&this.type===c.Empty&&this.clickNeighbors(),this.type>0&&void 0===this.value&&(this.attackPlayer(),this.revealCell())}attackPlayer(){const e=u.getInstance(),t=this.type-e.player.level+1;t>=0&&e.player.getAttacked(t),e.player.gainExperience(this.type)}clickNeighbors(){for(let e=-1;e<=1;e++)for(let t=-1;t<=1;t++){const s=this.board.getCell(this.x+e,this.y+t);s&&!s.isClicked&&(0===s.value?s.click():s.type===c.Empty?s.revealCell():s.type>c.Empty&&s.click())}}revealCell(){u.getInstance().player.gainExperience(1),this.isClicked=!0,this.HTMLElement.disabled=!0,this.HTMLElement.classList.add("clicked"),this.value?this.HTMLElement.innerText=this.value.toString():!this.value&&this.type>0?(this.HTMLElement.innerText=this.translateType(this.type),this.HTMLElement.classList.add("monster",this.translateType(this.type))):this.HTMLElement.innerText=""}translateType(e){switch(e){case c.Bat:return"B";case c.Zombie:return"Z";case c.Skeleton:return"S";case c.Ghost:return"G";case c.Boss:return"Bo";default:throw new Error("Unknown CellType")}}rightClick(e){e.preventDefault(),this.isClicked?this.clickNeighbors():(this.isFlagged=!this.isFlagged,this.toggleFlag())}addEventListeners(){this.HTMLElement.addEventListener("click",(()=>this.click()),!1),this.HTMLElement.addEventListener("contextmenu",(e=>this.rightClick(e)),!1)}removeEventListeners(){this.HTMLElement.addEventListener("click",(e=>e.stopImmediatePropagation()),!0),this.HTMLElement.addEventListener("contextmenu",(e=>{e.stopImmediatePropagation(),e.preventDefault()}),!0)}toggleFlag(){this.isFlagged?this.HTMLElement.innerHTML="F":this.HTMLElement.innerHTML=""}}class d{constructor(t,s,i,l=e){this.cells=[],this.validateDistribution(l),this._minesFrequency=i,this._width=t,this._height=s,this.fillBoard(l),this.determineCellValues(),this.DBG_printCellValues(),this.updateCSSVariables(t,s)}fillBoard(e){const t=this.createUrn(e);console.log(t);for(let e=0;e<this._height;e++){this.cells.push([]);for(let s=0;s<this._width;s++)this.appendCell(e,s,t.pop())}}appendCell(e,t,s){const i=document.getElementById("app");if(!i)throw new Error("No #app div found");const l=document.createElement("button"),r=new p(s,this,e,t,l);i.appendChild(l),this.cells[e].push(r)}createUrn(e){const t=this._width*this._height,s=this._minesFrequency*t,i=t*(1-this._minesFrequency),l=i+e.Bat*s,r=l+e.Zombie*s,n=r+e.Skeleton*s,a=n+e.Ghost*s,h=a+e.Boss*s,o=new Array(t).fill(c.Empty,0,i);return o.fill(c.Bat,i,l),o.fill(c.Zombie,l,r),o.fill(c.Skeleton,r,n),o.fill(c.Ghost,n,a),o.fill(c.Boss,a,h),o.sort((()=>.5-Math.random()))}determineCellValues(){this.cells.forEach(((e,t)=>{e.forEach(((e,s)=>{if(e.type===c.Empty){let i=0;i+=this.getCellType(t-1,s-1),i+=this.getCellType(t-1,s+0),i+=this.getCellType(t-1,s+1),i+=this.getCellType(t+0,s-1),i+=this.getCellType(t+0,s+1),i+=this.getCellType(t+1,s-1),i+=this.getCellType(t+1,s+0),i+=this.getCellType(t+1,s+1),e.value=i}}))}))}getCellType(e,t){return this.getCell(e,t)?this.cells[e][t].type:c.Empty}getCell(e,t){return this.cells[e]&&this.cells[e][t]?this.cells[e][t]:void 0}removeEventHandler(){for(let e=0;e<this._height;e++)for(let t=0;t<this._width;t++)console.log(e+", "+t),this.cells[e][t].removeEventListeners()}updateCSSVariables(e,t){const s=document.querySelector(":root");if(!s)throw new Error("No :root found");s.style.setProperty("--cols",e.toString()),s.style.setProperty("--rows",t.toString())}validateDistribution(e){let t=0;for(const[s,i]of Object.entries(e))t+=i;if(Math.abs(t-1)<Number.EPSILON)return!0;throw new Error("Provided typeDistribution doesn't sum to 1. Sum of proportions is "+t)}DBG_printCellValues(){let e="";this.cells.forEach((t=>{let s="";t.forEach((e=>{e.type===c.Empty?s+=e.value+"\t":s+="M\t"})),e+=s.trim()+"\n"})),console.log(e.trim())}}class u{constructor(){var e;this.width=s,this.height=i,this.minesFrequency=l,this.playerClass="Assassin",null===(e=document.getElementById("resetButton"))||void 0===e||e.addEventListener("click",(()=>this.resetGame()))}static getInstance(){return this.instance?this.instance:this.instance=new u}set board(e){this._board=e}get board(){if(!this._board)throw new Error("Board was not initialized!");return this._board}set player(e){this._player=e}get player(){if(!this._player)throw new Error("Player was not initialized!");return this._player}createBoard(){this.board=new d(this.width,this.height,this.minesFrequency)}createPlayer(){switch(this.playerClass){case"Assassin":this.player=new n;break;case"Mage":this.player=new a;break;case"Paladin":this.player=new h;break;case"Warrior":this.player=new o}}endGame(){this.board.removeEventHandler()}resetGame(){const e=document.getElementById("app");e&&(e.innerHTML=""),this.setSettings(),this.createBoard(),this.createPlayer()}setSettings(){this.width=+this.getValueFromInput("inputWidth"),this.height=+this.getValueFromInput("inputHeight"),this.minesFrequency=+this.getValueFromInput("inputMinesFrequency"),this.playerClass=this.getValueFromInput("selectClass")}getValueFromInput(e){const t=document.getElementById(e);if(console.log(t),t)return t.value;throw new Error("gameMaster: getValueFromHTML: HTML does not exist")}}y("inputWidth",s),y("inputHeight",i),y("inputMinesFrequency",l);const m=u.getInstance();function y(e,t){const s=document.getElementById(e);if(!s||"INPUT"!==s.tagName)throw new Error("app: setValueToInput: HTML does not exist. ID: "+e);s.value=t.toString()}m.setSettings(),m.createBoard(),m.createPlayer()})();